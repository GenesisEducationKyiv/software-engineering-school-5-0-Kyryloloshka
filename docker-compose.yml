services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - '5435:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - apps/subscription/.env
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    depends_on:
      - postgres
    ports:
      - '5050:80'            
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - apps/subscription/.env
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3200:3200"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
  # api-gateway:
  #   build:
  #     context: .
  #     dockerfile: apps/api-gateway/Dockerfile
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - apps/api-gateway/.env
  #   depends_on:
  #     - postgres
  #     - redis
  # weather:
  #   build:
  #     context: .
  #     dockerfile: apps/weather/Dockerfile
  #   restart: always
  #   ports:
  #     - "3001:3001"
  #   env_file:
  #     - apps/weather/.env
  #   depends_on:
  #     - redis
  # subscription:
  #   build:
  #     context: .
  #     dockerfile: apps/subscription/Dockerfile
  #   restart: always
  #   ports:
  #     - "3002:3002"
  #   env_file:
  #     - apps/subscription/.env
  #   depends_on:
  #     - postgres
  #     - redis
  # notification:
  #   build:
  #     context: .
  #     dockerfile: apps/notification/Dockerfile
  #   restart: always
  #   ports:
  #     - "3003:3003"
  #   env_file:
  #     - apps/notification/.env
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
volumes:
  pgdata:
  pgadmin_data:
  grafana_data: