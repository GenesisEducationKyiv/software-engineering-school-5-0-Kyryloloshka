version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pg-weather
    restart: always
    ports:
      - '5435:5432'
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
  postgres-test:
    image: postgres:15
    container_name: pg-weather-test
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres-test
      POSTGRES_PASSWORD: postgres-test
      POSTGRES_DB: test-db
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-weather
    restart: always
    depends_on:
      - postgres
    ports:
      - '5050:80'            
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-api
    ports:
      - '5000:3000'
    depends_on:
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    env_file:
      - .env
    command: npm run start:prod
volumes:
  pgdata:
  pgadmin_data: