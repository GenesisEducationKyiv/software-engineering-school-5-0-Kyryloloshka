{
  "name": "genesis-test-assignment",
  "version": "0.0.1",
  "description": "Weather Forecast Microservices System",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "build:gateway": "nest build api-gateway",
    "build:weather": "nest build weather",
    "build:subscription": "nest build subscription",
    "build:all": "pnpm build:gateway && pnpm build:weather && pnpm build:subscription",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "cross-env NODE_ENV=development dotenv -e .env -- nest start --watch",
    "start:test": "cross-env NODE_ENV=test dotenv -e .env.test.local -- nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/genesis-test-assignment/main",
    "start:gateway": "nest start api-gateway",
    "start:gateway:dev": "cross-env NODE_ENV=development dotenv -e .env -- nest start api-gateway --watch",
    "start:weather": "nest start weather",
    "start:weather:dev": "cross-env NODE_ENV=development dotenv -e .env -- nest start weather --watch",
    "start:subscription": "nest start subscription",
    "start:subscription:dev": "cross-env NODE_ENV=development dotenv -e .env -- nest start subscription --watch",
    "start:all:dev": "concurrently \"pnpm start:gateway:dev\" \"pnpm start:weather:dev\" \"pnpm start:subscription:dev\"",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npm run typeorm -- migration:generate src/migrations/InitMigration -d apps/subscription/src/data-source.ts",
    "migration:run": "npm run typeorm -- migration:run -d apps/subscription/src/data-source.ts",
    "migration:run:test": "cross-env NODE_ENV=test dotenv -e .env.test.local -- npm run typeorm -- migration:run -d apps/subscription/src/data-source.ts",
    "migration:run:prod": "dotenv -e .env -- npm run typeorm -- migration:run -d dist/data-source.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "lint:fix": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest --config jest.config.ts",
    "test:watch": "jest --watch --config jest.config.ts",
    "test:cov": "jest --coverage --config jest.config.ts",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand --config jest.config.ts",
    "test:e2e": "npx playwright test",
    "test:gateway": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest --config jest.config.ts --testPathPattern=apps/api-gateway",
    "test:weather": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest --config jest.config.ts --testPathPattern=apps/weather",
    "test:subscription": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest --config jest.config.ts --testPathPattern=apps/subscription",
    "test:unit": "pnpm test:gateway && pnpm test:weather && pnpm test:subscription",
    "test:integration": "pnpm test:int",
    "db:drop:test": "cross-env NODE_ENV=test dotenv -e .env.test.local -- ts-node -r tsconfig-paths/register apps/subscription/src/scripts/clean-db.ts",
    "db:reset:test": "pnpm db:restart:test && pnpm db:drop:test && pnpm migration:run:test",
    "db:restart": "docker compose down && docker compose up -d && sleep 1",
    "db:restart:test": "docker compose -f docker-compose.test.yml down && docker compose -f docker-compose.test.yml up -d && sleep 1",
    "test:int:ci": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest -i --no-cache --config jest-int.ts --detectOpenHandles --forceExit",
    "test:int": "pnpm db:reset:test && pnpm test:int:ci",
    "test:int:watch": "cross-env NODE_ENV=test dotenv -e .env.test.local -- jest -i --no-cache --watch --config jest-int.ts",
    "test:arch": "jest --config jest-arch.ts",
    "test:arch:watch": "jest --watch --config jest-arch.ts",
    "test:all": "pnpm test:unit && pnpm test:integration && pnpm test:e2e && pnpm test:arch",
    "docker:build": "docker compose build",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:test": "docker compose -f docker-compose.test.yml up --build --abort-on-container-exit",
    "clean": "rm -rf dist coverage",
    "clean:all": "pnpm clean && rm -rf node_modules pnpm-lock.yaml"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.7.15",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/microservices": "^11.1.3",
    "@nestjs/platform-express": "^11.1.1",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "axios": "^1.9.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "handlebars": "^4.7.8",
    "ioredis": "^5.6.1",
    "joi": "^17.13.3",
    "nodemailer": "^7.0.3",
    "pg": "^8.16.0",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.24",
    "@nestjs/terminus": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.7",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.1",
    "@playwright/test": "^1.53.0",
    "@types/express": "^4.17.17",
    "@types/handlebars": "^4.1.0",
    "@types/jest": "^29.5.2",
    "@types/node": "^22.15.18",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "msw": "^2.10.2",
    "playwright": "^1.53.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsarch": "^5.4.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@lib/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}